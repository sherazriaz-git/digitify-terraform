name: Terraform Reusable

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required to add comments to Pull Requests
  deployments: write # This is required to deactivate deployments

on:
  workflow_dispatch:
    inputs:
      aws-region:
        required: true
        description: "AWS Region"
      terraform-execution-iam-role-arn:
        required: true
        description: "Terraform Execution IAM Role ARN"
      maintainer:
        required: true
        description: "Maintainer Name"
  push:
    branches:
      - '**'
      - '!main'
  pull_request:
    types: [opened, reopened, closed]
    branches:
     - main

jobs:
  terraform-check:
    name: Terraform fmt, validate and tfsec check
    if : github.ref != 'refs/heads/main'
    # if:  ${{ (github.event_name == 'push') && (github.ref != 'refs/heads/main') }} 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Terraform fmt, validate and tfsec check
        id: checks
        uses: ./.github/actions/terraform-checks
        with:
          aws-region: ${{ vars.AWS_REGION }}
          terraform-execution-iam-role-arn: ${{ secrets.AWS_IAM_ROLE_ARN }}
          working-directory: prod


  terraform-plan:
    name: Terraform Plan
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    # if:  ${{ github.event_name == 'pull_request' && github.event.action == 'opened' && github.event.pull_request.base.ref == 'main' }} 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Terraform Plan
        id: plan
        uses: ./.github/actions/terraform-plan
        with:
          deploy: true
          aws-region: ${{ vars.AWS_REGION }}
          terraform-execution-iam-role-arn: ${{ secrets.AWS_IAM_ROLE_ARN }}
          maintainer: $GITHUB_USER
          working-directory: prod
      - name: Upload Plan to S3
        run: | 
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          COMMIT_HASH=$(echo "${GITHUB_SHA}" | cut -c1-7)
          aws s3 cp prod/tfplan.out s3://${{ vars.TF_STATE_BUCKET_NAME }}/github/$PR_NUMBER/terraform-plan-${{ github.event.pull_request.head.sha }}_plan.tfplan


  terraform-apply:
    if: github.event_name == 'pull_request' && github.pull_request.merged == true && github.base_ref == 'main' 
    # if:  ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' }} 
    name: Terraform Apply
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Plan from  S3
        run: | 
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          COMMIT_HASH=$(echo "${GITHUB_SHA}" | cut -c1-7)
          cd prod && aws s3 cp  s3://${{ vars.TF_STATE_BUCKET_NAME }}/github/$PR_NUMBER/terraform-plan-${{ github.event.pull_request.head.sha }}_plan.tfplan prod.tfplan

      - name: Terraform Apply
        id: plan
        uses: ./.github/actions/terraform-apply
        with:
          deploy: true
          terraform-execution-iam-role-arn: ${{ secrets.AWS_IAM_ROLE_ARN }}
          maintainer: $GITHUB_USER
          working-directory: prod
